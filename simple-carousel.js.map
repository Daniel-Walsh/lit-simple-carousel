{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["src/simple-carousel.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,IAAI,EAAE,UAAU,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EACL,aAAa,EACb,QAAQ,EACR,qBAAqB,GACtB,MAAM,mBAAmB,CAAC;AAE3B,OAAO,mBAAmB,CAAC;AAG3B,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAA9C;;QAO4B,eAAU,GAAG,CAAC,CAAC;QAqCzC,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC;QAEF,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAvCU,MAAM;QACb,OAAO,IAAI,CAAA;6BACc,IAAI,CAAC,mBAAmB;;6BAExB,IAAI,CAAC,mBAAmB;KAChD,CAAC;IACJ,CAAC;IAEQ,YAAY;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEQ,OAAO;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,EAAE;gBACzB,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aAClC;SACF;IACH,CAAC;IAEO,WAAW,CAAC,MAAc;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,UAAU;YACb,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC;IAC1E,CAAC;CASF,CAAA;AAlDiB,qBAAM,GAAG,GAAG,CAAA;;;;GAI1B,CAAA;AAEwB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;kDAAgB;AAGzC;IADC,qBAAqB,EAAE;qDACuB;AAVpC,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CAmD1B;SAnDY,cAAc;AAqD3B,SAAS,SAAS,CAAC,EAAe;IAChC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACnC,CAAC;AAED,SAAS,SAAS,CAAC,EAAe;IAChC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACtC,CAAC","sourcesContent":["import {html, LitElement, css} from 'lit';\nimport {\n  customElement,\n  property,\n  queryAssignedElements,\n} from 'lit/decorators.js';\n\nimport './slide-button.js';\n\n@customElement('simple-carousel')\nexport class SimpleCarousel extends LitElement {\n  static override styles = css`\n    ::slotted(.slide-hidden) {\n      display: none;\n    }\n  `;\n\n  @property({type: Number}) slideIndex = 0;\n\n  @queryAssignedElements()\n  private readonly slideElements!: HTMLElement[];\n\n  override render() {\n    return html`\n      <slide-button @click=${this.navigateToPrevSlide}>Left</slide-button>\n      <slot></slot>\n      <slide-button @click=${this.navigateToNextSlide}>Right</slide-button>\n    `;\n  }\n\n  override firstUpdated() {\n    this.navigateSlide();\n  }\n\n  override updated() {\n    this.navigateSlide();\n  }\n\n  private navigateSlide() {\n    for (let i = 0; i < this.slideElements.length; i++) {\n      if (i === this.slideIndex) {\n        showSlide(this.slideElements[i]);\n      } else {\n        hideSlide(this.slideElements[i]);\n      }\n    }\n  }\n\n  private changeSlide(offset: number) {\n    const slideCount = this.slideElements.length;\n    this.slideIndex =\n      (slideCount + ((this.slideIndex + offset) % slideCount)) % slideCount;\n  }\n\n  navigateToNextSlide = () => {\n    this.changeSlide(1);\n  };\n\n  navigateToPrevSlide = () => {\n    this.changeSlide(-1);\n  };\n}\n\nfunction hideSlide(el: HTMLElement) {\n  el.classList.add('slide-hidden');\n}\n\nfunction showSlide(el: HTMLElement) {\n  el.classList.remove('slide-hidden');\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'simple-carousel': SimpleCarousel;\n  }\n}\n"]}